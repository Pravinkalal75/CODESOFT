import tkinter as tk
from tkinter import messagebox
import random
import string

class PasswordGenerator:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Password Generator")

        # Password length
        tk.Label(self.root, text="Password Length:").grid(row=0, column=0)
        self.length_entry = tk.Entry(self.root)
        self.length_entry.grid(row=0, column=1)

        # Character set options
        tk.Label(self.root, text="Character Set:").grid(row=1, column=0)
        self.use_uppercase_var = tk.BooleanVar()
        self.use_numbers_var = tk.BooleanVar()
        self.use_symbols_var = tk.BooleanVar()
        tk.Checkbutton(self.root, text="Uppercase", variable=self.use_uppercase_var).grid(row=1, column=1)
        tk.Checkbutton(self.root, text="Numbers", variable=self.use_numbers_var).grid(row=1, column=2)
        tk.Checkbutton(self.root, text="Symbols", variable=self.use_symbols_var).grid(row=1, column=3)

        # Password complexity options
        tk.Label(self.root, text="Password Complexity:").grid(row=2, column=0)
        self.complexity_var = tk.StringVar()
        self.complexity_var.set("Medium")  # default value
        tk.OptionMenu(self.root, self.complexity_var, "Low", "Medium", "High").grid(row=2, column=1)

        # Generate password button
        tk.Button(self.root, text="Generate Password", command=self.generate_password).grid(row=3, column=0, columnspan=4)

        # Clipboard integration
        self.clipboard_button = tk.Button(self.root, text="Copy to Clipboard", command=self.copy_to_clipboard)
        self.clipboard_button.grid(row=4, column=0, columnspan=4)

    def generate_password(self):
        length = int(self.length_entry.get())
        use_uppercase = self.use_uppercase_var.get()
        use_numbers = self.use_numbers_var.get()
        use_symbols = self.use_symbols_var.get()
        complexity = self.complexity_var.get()

        # Generate password based on complexity level
        if complexity == "Low":
            characters = string.ascii_lowercase
        elif complexity == "Medium":
            characters = string.ascii_letters + string.digits
        else:  # High
            characters = string.ascii_letters + string.digits + string.punctuation

        if use_uppercase:
            characters += string.ascii_uppercase
        if use_numbers:
            characters += string.digits
        if use_symbols:
            characters += string.punctuation

        password = ''.join(random.choice(characters) for _ in range(length))
        self.clipboard_button.config(text="Copy to Clipboard: " + password)

    def copy_to_clipboard(self):
        password = self.clipboard_button.cget("text").split(": ")[1]
        self.root.clipboard_clear()
        self.root.clipboard_append(password)
        messagebox.showinfo("Password Copied", "Password copied to clipboard!")

    def run(self):
        self.root.mainloop()

if __name__ == "__main__":
    generator = PasswordGenerator()
    generator.run()
